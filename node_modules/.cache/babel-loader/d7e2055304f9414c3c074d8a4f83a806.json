{"ast":null,"code":"import{send,assign}from\"xstate\";import{inspect}from'@xstate/inspect';inspect({url:\"https://statecharts.io/inspect\",iframe:false});function say(text){return send(_context=>({type:\"SPEAK\",value:text}));}function listen(){return send('LISTEN');}import{nluRequest}from\"./index.tsx\";const grammar={\"John\":{person:\"John Appleseed\"},\"Mary\":{person:\"Mary Orangeseed\"},\"Dan\":{person:\"Dan Cherryseed\"},\"Steve\":{person:\"Steve Strawberryseed\"},\"Klaus\":{person:\"Klaus Pearseed\"},\"Gus\":{person:\"Gus Bananaseed\"},\"Jennifer\":{person:\"Jennifer Pineappleseed\"},\"Monday\":{day:\"Monday\"},\"Tuesday\":{day:\"Tuesday\"},\"Wednesday\":{day:\"Wednesday\"},\"Thursday\":{day:\"Thursday\"},\"Friday\":{day:\"Friday\"},\"Saturday\":{day:\"Saturday\"},\"Sunday\":{day:\"Sunday\"},\"next Monday\":{day:\"Monday\"},\"next Tuesday\":{day:\"Tuesday\"},\"next Wednesday\":{day:\"Wednesday\"},\"next Thursday\":{day:\"Thursday\"},\"next Friday\":{day:\"Friday\"},\"next Saturday\":{day:\"Saturday\"},\"next Sunday\":{day:\"Sunday\"},\"on Monday\":{day:\"Monday\"},\"on Tuesday\":{day:\"Tuesday\"},\"on Wednesday\":{day:\"Wednesday\"},\"on Thursday\":{day:\"Thursday\"},\"on Friday\":{day:\"Friday\"},\"on Saturday\":{day:\"Saturday\"},\"on Sunday\":{day:\"Sunday\"},\"it's at 8\":{time:\"08:00\"},\"it's at 9\":{time:\"09:00\"},\"it's at 10\":{time:\"10:00\"},\"it's at 11\":{time:\"11:00\"},\"it's at 12\":{time:\"12:00\"},\"it's at 1\":{time:\"13:00\"},\"it's at 2\":{time:\"14:00\"},\"it's at 3\":{time:\"15:00\"},\"it's at 4\":{time:\"16:00\"},\"it's at 5\":{time:\"17:00\"},\"it's at 6\":{time:\"18:00\"},\"at 8\":{time:\"08:00\"},\"at 9\":{time:\"09:00\"},\"at 10\":{time:\"10:00\"},\"at 11\":{time:\"11:00\"},\"at 12\":{time:\"12:00\"},\"at 1\":{time:\"13:00\"},\"at 2\":{time:\"14:00\"},\"at 3\":{time:\"15:00\"},\"at 4\":{time:\"16:00\"},\"at 5\":{time:\"17:00\"},\"at 6\":{time:\"18:00\"},\"8\":{time:\"08:00\"},\"9\":{time:\"09:00\"},\"10\":{time:\"10:00\"},\"11\":{time:\"11:00\"},\"12\":{time:\"12:00\"},\"1\":{time:\"13:00\"},\"2\":{time:\"14:00\"},\"3\":{time:\"15:00\"},\"4\":{time:\"16:00\"},\"5\":{time:\"17:00\"},\"6\":{time:\"18:00\"},\"around 8\":{time:\"08:00\"},\"around 9\":{time:\"09:00\"},\"around 10\":{time:\"10:00\"},\"around 11\":{time:\"11:00\"},\"around 12\":{time:\"12:00\"},\"around 1\":{time:\"13:00\"},\"around 2\":{time:\"14:00\"},\"around 3\":{time:\"15:00\"},\"around 4\":{time:\"16:00\"},\"around 5\":{time:\"17:00\"},\"around 6\":{time:\"18:00\"},\"I want to book an appointment\":{appointment:\"appointment\"},\"rendez-vous\":{appointment:\"appointment\"},\"appointment\":{appointment:\"appointment\"},\"Let's create an appointment\":{appointment:\"appointment\"},\"I want an appointment\":{appointment:\"appointment\"},\"appointment\":{appointment:\"appointment\"},\"schedule\":{appointment:\"appointment\"},\"to-do list\":{todoitem:\"todoitem\"},\"a to-do list\":{todoitem:\"todoitem\"},\"list\":{todoitem:\"todoitem\"},\"Let's start a to-do list\":{todoitem:\"todoitem\"},\"I have something to do\":{todoitem:\"todoitem\"},\"to do list\":{todoitem:\"todoitem\"},\"timer\":{timer:\"timer\"},\"a timer\":{timer:\"timer\"},\"start the timer\":{timer:\"timer\"},\"ring\":{timer:\"timer\"},\"minute\":{timer:\"timer\"},\"yes\":{agree:\"yes\"},\"yeah\":{agree:\"yes\"},\"sounds good\":{agree:\"yes\"},\"of course\":{agree:\"yes\"},\"probably\":{agree:\"yes\"},\"it's fine\":{agree:\"yes\"},\"no\":{refuse:\"no\"},\"I'm not sure\":{refuse:\"no\"},\"I don't think so\":{refuse:\"no\"},\"no way\":{refuse:\"no\"},\"absolutely not\":{refuse:\"no\"}};export const dmMachine={initial:'init',states:{init:{on:{CLICK:'welcome'}},welcome:{initial:\"prompt\",on:{RECOGNISED:{target:'query'}},states:{prompt:{entry:say(\"What would you like to do?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()}}},query:{invoke:{id:'rasa',src:(context,event)=>nluRequest(context.recResult),onDone:{actions:assign((context,event)=>{return{nluData:event.data};}),target:'rasaChoice'},onError:{actions:assign({errorMessage:(context,event)=>console.log(event.data)}),target:'failure'}}},failure:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:say(\"There is an error, please retry later.\")}}},rasaChoice:{initial:\"prompt\",on:{ENDSPEECH:[{cond:context=>context.nluData.intent.name==='appointment',target:\"appointment\"},{cond:context=>context.nluData.intent.name==='TODO_item',target:\"todo\"},{cond:context=>context.nluData.intent.name==='timer',target:\"timer\"},{entry:say(\"Nope, duh can you repeat clearly?\"),target:\"welcome\"}]},states:{prompt:{entry:say(\"Actualization.\")}}},/*choice: {\r\n            initial: \"prompt\",\r\n            on: {\r\n                RECOGNISED: [{\r\n                    //cond: (context) => \"appointment\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { appointment: grammar[ context.recResult].appointment } }),\r\n                    target: \"appointment\"\r\n                },\r\n                {\r\n                    //cond: (context) => \"todoitem\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { todoitem: grammar[ context.recResult].todoitem } }),\r\n                    target: \"todo\"\r\n                },\r\n                {\r\n                    //cond: (context) => \"timer\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { timer: grammar[ context.recResult].timer } }),\r\n                    target: \"timer\"\r\n                },\r\n                { target: \".nomatch\" }]\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: say(\"What would you like to do?\"),\r\n                    on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                },\r\n                nomatch: {\r\n                    entry: say(\"Please, choose between appointment, to do list and timer.\"),\r\n                    on: { ENDSPEECH: \"prompt\" }\r\n                }\r\n            }\r\n        },*/appointment:{initial:\"prompt\",on:{ENDSPEECH:\"who\"},states:{prompt:{entry:say(\"Let's create an appointment!\")}}},todo:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:say(\"Let's create a to-do list!\")}}},timer:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:say(\"Let's start a timer!\")}}},who:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"person\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{person:grammar[context.recResult].person};}),target:\"day\"},{target:\".nomatch\"}]},states:{prompt:{entry:say(\"Who are you meeting with?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I don't know them.\"),on:{ENDSPEECH:\"prompt\"}}}},day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"day\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{day:grammar[context.recResult].day};}),target:\"duration\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:'On which day is your meeting?'})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry, can you repeat?\"),on:{ENDSPEECH:\"prompt\"}}}},duration:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"agree\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{agree:grammar[context.recResult].agree};}),target:\"confirmationWholeDay\"},{cond:context=>\"refuse\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{refuse:grammar[context.recResult].refuse};}),target:\"time\"},{target:\".nomatch\"}]},states:{prompt:{entry:say(\"Will it take the whole day?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry, can you answer with yes or no?\"),on:{ENDSPEECH:\"prompt\"}}}},time:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"time\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{time:grammar[context.recResult].time};}),target:\"regularConfirmation\"},{target:\".nomatch\"}]},states:{prompt:{entry:say(\"What time is your meeting?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry can you choose between 8 to 12 or 1 to 6?\"),on:{ENDSPEECH:\"prompt\"}}}},regularConfirmation:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"agree\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{agree:grammar[context.recResult].agree};}),target:\"confirmation\"},{cond:context=>\"refuse\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{refuse:grammar[context.recResult].refuse};}),target:\"who\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Do you want me to create an appointment with \".concat(context.person,\" on \").concat(context.day,\" at \").concat(context.time,\" ?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry can you answer with yes or no?\"),on:{ENDSPEECH:\"prompt\"}}}},confirmationWholeDay:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"agree\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{agree:grammar[context.recResult].agree};}),target:\"confirmation\"},{cond:context=>\"refuse\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{refuse:grammar[context.recResult].refuse};}),target:\"who\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Do you want me to create an appointment with \".concat(context.person,\" on \").concat(context.day,\" for the whole day?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry can you answer with yes or no?\"),on:{ENDSPEECH:\"prompt\"}}}},confirmation:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:say(\"Your appointment has been created!\")}}}}};","map":{"version":3,"sources":["C:/Users/Bérénice/Documents/nodeJS/react-xstate-colourchanger/src/dmAppointment.ts"],"names":["send","assign","inspect","url","iframe","say","text","_context","type","value","listen","nluRequest","grammar","person","day","time","appointment","todoitem","timer","agree","refuse","dmMachine","initial","states","init","on","CLICK","welcome","RECOGNISED","target","prompt","entry","ENDSPEECH","ask","query","invoke","id","src","context","event","recResult","onDone","actions","nluData","data","onError","errorMessage","console","log","failure","rasaChoice","cond","intent","name","todo","who","nomatch","duration","regularConfirmation","confirmationWholeDay","confirmation"],"mappings":"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","sourcesContent":["import { MachineConfig, send, Action, assign } from \"xstate\";\r\n\r\nimport { inspect } from '@xstate/inspect';\r\n\r\ninspect({\r\n  url: \"https://statecharts.io/inspect\",\r\n  iframe: false\r\n});\r\n\r\nfunction say(text: string): Action<SDSContext, SDSEvent> {\r\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\r\n}\r\n\r\nfunction listen(): Action<SDSContext, SDSEvent> {\r\n    return send('LISTEN')\r\n}\r\n\r\nimport { nluRequest } from \"./index.tsx\";\r\n\r\nconst grammar: { [index: string]: { person?: string, day?: string, time?: string, agree?: string, refuse?: string, appointment?: string, todoitem?: string, timer?: string } } = {\r\n    \"John\": { person: \"John Appleseed\" },\r\n    \"Mary\": { person: \"Mary Orangeseed\" },\r\n    \"Dan\": { person: \"Dan Cherryseed\" },\r\n    \"Steve\": { person: \"Steve Strawberryseed\" },\r\n    \"Klaus\": { person: \"Klaus Pearseed\" },\r\n    \"Gus\": { person: \"Gus Bananaseed\" },\r\n    \"Jennifer\": { person: \"Jennifer Pineappleseed\" },\r\n    \"Monday\": { day: \"Monday\" },\r\n    \"Tuesday\": { day: \"Tuesday\" },\r\n    \"Wednesday\": { day: \"Wednesday\" },\r\n    \"Thursday\": { day: \"Thursday\" },\r\n    \"Friday\": { day: \"Friday\" },\r\n    \"Saturday\": { day: \"Saturday\" },\r\n    \"Sunday\": { day: \"Sunday\" },\r\n    \"next Monday\": { day: \"Monday\" },\r\n    \"next Tuesday\": { day: \"Tuesday\" },\r\n    \"next Wednesday\": { day: \"Wednesday\" },\r\n    \"next Thursday\": { day: \"Thursday\" },\r\n    \"next Friday\": { day: \"Friday\" },\r\n    \"next Saturday\": { day: \"Saturday\" },\r\n    \"next Sunday\": { day: \"Sunday\" },\r\n    \"on Monday\": { day: \"Monday\" },\r\n    \"on Tuesday\": { day: \"Tuesday\" },\r\n    \"on Wednesday\": { day: \"Wednesday\" },\r\n    \"on Thursday\": { day: \"Thursday\" },\r\n    \"on Friday\": { day: \"Friday\" },\r\n    \"on Saturday\": { day: \"Saturday\" },\r\n    \"on Sunday\": { day: \"Sunday\" },\r\n    \"it's at 8\": { time: \"08:00\" },\r\n    \"it's at 9\": { time: \"09:00\" },\r\n    \"it's at 10\": { time: \"10:00\" },\r\n    \"it's at 11\": { time: \"11:00\" },\r\n    \"it's at 12\": { time: \"12:00\" },\r\n    \"it's at 1\": { time: \"13:00\" },\r\n    \"it's at 2\": { time: \"14:00\" },\r\n    \"it's at 3\": { time: \"15:00\" },\r\n    \"it's at 4\": { time: \"16:00\" },\r\n    \"it's at 5\": { time: \"17:00\" },\r\n    \"it's at 6\": { time: \"18:00\" },\r\n    \"at 8\": { time: \"08:00\" },\r\n    \"at 9\": { time: \"09:00\" },\r\n    \"at 10\": { time: \"10:00\" },\r\n    \"at 11\": { time: \"11:00\" },\r\n    \"at 12\": { time: \"12:00\" },\r\n    \"at 1\": { time: \"13:00\" },\r\n    \"at 2\": { time: \"14:00\" },\r\n    \"at 3\": { time: \"15:00\" },\r\n    \"at 4\": { time: \"16:00\" },\r\n    \"at 5\": { time: \"17:00\" },\r\n    \"at 6\": { time: \"18:00\" },\r\n    \"8\": { time: \"08:00\" },\r\n    \"9\": { time: \"09:00\" },\r\n    \"10\": { time: \"10:00\" },\r\n    \"11\": { time: \"11:00\" },\r\n    \"12\": { time: \"12:00\" },\r\n    \"1\": { time: \"13:00\" },\r\n    \"2\": { time: \"14:00\" },\r\n    \"3\": { time: \"15:00\" },\r\n    \"4\": { time: \"16:00\" },\r\n    \"5\": { time: \"17:00\" },\r\n    \"6\": { time: \"18:00\" },\r\n    \"around 8\": { time: \"08:00\" },\r\n    \"around 9\": { time: \"09:00\" },\r\n    \"around 10\": { time: \"10:00\" },\r\n    \"around 11\": { time: \"11:00\" },\r\n    \"around 12\": { time: \"12:00\" },\r\n    \"around 1\": { time: \"13:00\" },\r\n    \"around 2\": { time: \"14:00\" },\r\n    \"around 3\": { time: \"15:00\" },\r\n    \"around 4\": { time: \"16:00\" },\r\n    \"around 5\": { time: \"17:00\" },\r\n    \"around 6\": { time: \"18:00\" },\r\n    \"I want to book an appointment\": { appointment: \"appointment\" },\r\n    \"rendez-vous\": { appointment: \"appointment\" },\r\n    \"appointment\": { appointment: \"appointment\" },\r\n    \"Let's create an appointment\": { appointment: \"appointment\" },\r\n    \"I want an appointment\": { appointment: \"appointment\" },\r\n    \"appointment\": { appointment: \"appointment\" },\r\n    \"schedule\": { appointment: \"appointment\" },\r\n    \"to-do list\": { todoitem: \"todoitem\" },\r\n    \"a to-do list\": { todoitem: \"todoitem\" },\r\n    \"list\": { todoitem: \"todoitem\" },\r\n    \"Let's start a to-do list\": { todoitem: \"todoitem\" },\r\n    \"I have something to do\": { todoitem: \"todoitem\" },\r\n    \"to do list\": { todoitem: \"todoitem\" },\r\n    \"timer\": { timer: \"timer\" },\r\n    \"a timer\": { timer: \"timer\" },\r\n    \"start the timer\": { timer: \"timer\" },\r\n    \"ring\": { timer: \"timer\" },\r\n    \"minute\": { timer: \"timer\" },\r\n    \"yes\": { agree: \"yes\" },\r\n    \"yeah\": { agree: \"yes\" },\r\n    \"sounds good\": { agree: \"yes\" },\r\n    \"of course\": { agree: \"yes\" },\r\n    \"probably\": { agree: \"yes\" },\r\n    \"it's fine\": { agree: \"yes\" },\r\n    \"no\": { refuse: \"no\" },\r\n    \"I'm not sure\": { refuse: \"no\" },\r\n    \"I don't think so\": { refuse: \"no\" },\r\n    \"no way\": { refuse: \"no\" },\r\n    \"absolutely not\": { refuse: \"no\" },\r\n}\r\n\r\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\r\n    initial: 'init',\r\n    states: {\r\n        init: {\r\n            on: {\r\n                CLICK: 'welcome'\r\n            }\r\n        },\r\n        welcome: {\r\n            initial: \"prompt\",\r\n            on: { RECOGNISED: \r\n                { target: 'query' }\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: say(\"What would you like to do?\"),\r\n                    on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                }\r\n            }\r\n        },\r\n        query: {\r\n            invoke: {\r\n                id: 'rasa',\r\n                src: (context, event) => nluRequest(context.recResult),\r\n                onDone: {\r\n                    actions: assign((context, event) => { return { nluData: event.data }}),\r\n                    target: 'rasaChoice'\r\n                },\r\n                onError: {\r\n                    actions: assign({ errorMessage: (context, event) => console.log(event.data)}),\r\n                    target: 'failure',\r\n                }\r\n            }\r\n        },\r\n        failure: {\r\n            initial: \"prompt\",\r\n            on: { ENDSPEECH: \"init\" },\r\n            states: {\r\n                prompt: { entry: say(\"There is an error, please retry later.\") }\r\n            }\r\n        },\r\n        rasaChoice: {\r\n            initial: \"prompt\",\r\n            on: { ENDSPEECH: [{ \r\n                cond: (context) =>  context.nluData.intent.name === 'appointment',\r\n                target: \"appointment\"\r\n                },\r\n                { cond: (context) =>  context.nluData.intent.name === 'TODO_item',\r\n                    target: \"todo\"\r\n                },\r\n                { cond: (context) =>  context.nluData.intent.name === 'timer',\r\n                    target: \"timer\"\r\n                },\r\n                { entry: say(\"Nope, duh can you repeat clearly?\"),\r\n                    target: \"welcome\" }]\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: say(\"Actualization.\")\r\n                }\r\n            }\r\n        },\r\n        /*choice: {\r\n            initial: \"prompt\",\r\n            on: {\r\n                RECOGNISED: [{\r\n                    //cond: (context) => \"appointment\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { appointment: grammar[ context.recResult].appointment } }),\r\n                    target: \"appointment\"\r\n                },\r\n                {\r\n                    //cond: (context) => \"todoitem\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { todoitem: grammar[ context.recResult].todoitem } }),\r\n                    target: \"todo\"\r\n                },\r\n                {\r\n                    //cond: (context) => \"timer\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { timer: grammar[ context.recResult].timer } }),\r\n                    target: \"timer\"\r\n                },\r\n                { target: \".nomatch\" }]\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: say(\"What would you like to do?\"),\r\n                    on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                },\r\n                nomatch: {\r\n                    entry: say(\"Please, choose between appointment, to do list and timer.\"),\r\n                    on: { ENDSPEECH: \"prompt\" }\r\n                }\r\n            }\r\n        },*/\r\n        appointment: {\r\n            initial: \"prompt\",\r\n            on: { ENDSPEECH: \"who\" },\r\n            states: {\r\n                prompt: { entry: say(\"Let's create an appointment!\") }\r\n            }\r\n        },\r\n        todo: {\r\n            initial: \"prompt\",\r\n            on: { ENDSPEECH: \"init\" },\r\n            states: {\r\n                prompt: { entry: say(\"Let's create a to-do list!\") }\r\n            }\r\n        },\r\n        timer: {\r\n            initial: \"prompt\",\r\n            on: { ENDSPEECH: \"init\" },\r\n            states: {\r\n                prompt: { entry: say(\"Let's start a timer!\") }\r\n            }\r\n        },\r\n        who: {\r\n            initial: \"prompt\",\r\n            on: {\r\n                RECOGNISED: [{\r\n                    cond: (context) => \"person\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\r\n                    target: \"day\"\r\n\r\n                },\r\n                { target: \".nomatch\" }]\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: say(\"Who are you meeting with?\"),\r\n                    on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                },\r\n                nomatch: {\r\n                    entry: say(\"Sorry I don't know them.\"),\r\n                    on: { ENDSPEECH: \"prompt\" }\r\n                }\r\n            }\r\n        },\r\n        day: {\r\n            initial: \"prompt\",\r\n            on: {\r\n                RECOGNISED: [{\r\n                    cond: (context) => \"day\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { day: grammar[context.recResult].day } }),\r\n                    target: \"duration\"\r\n\r\n                },\r\n                { target: \".nomatch\" }]\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: send((context) => ({\r\n                        type: \"SPEAK\",\r\n                        value: 'On which day is your meeting?',\r\n                    })),\r\n                    on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                },\r\n                nomatch: {\r\n                    entry: say(\"Sorry, can you repeat?\"),\r\n                    on: { ENDSPEECH: \"prompt\" }\r\n                },\r\n            }\r\n        },\r\n        duration: {\r\n            initial: \"prompt\",\r\n            on: {\r\n                RECOGNISED: [{\r\n                    cond: (context) => \"agree\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { agree: grammar[context.recResult].agree } }),\r\n                    target: \"confirmationWholeDay\"\r\n                },\r\n                {   \r\n                    cond: (context) => \"refuse\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { refuse: grammar[context.recResult].refuse } }),\r\n                    target: \"time\"\r\n                },\r\n                { target: \".nomatch\" }],\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: say(\"Will it take the whole day?\"),\r\n                    on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                },\r\n                nomatch: {\r\n                    entry: say(\"Sorry, can you answer with yes or no?\"),\r\n                    on: { ENDSPEECH: \"prompt\" }\r\n                },\r\n            }\r\n        },\r\n        time: {\r\n            initial: \"prompt\",\r\n            on: {\r\n                RECOGNISED: [{\r\n                    cond: (context) => \"time\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { time: grammar[context.recResult].time } }),\r\n                    target: \"regularConfirmation\"\r\n                },\r\n                { target: \".nomatch\" }]\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: say(\"What time is your meeting?\"),\r\n                    on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                },\r\n                nomatch: {\r\n                    entry: say(\"Sorry can you choose between 8 to 12 or 1 to 6?\"),\r\n                    on: { ENDSPEECH: \"prompt\" }\r\n                },\r\n            }\r\n        },\r\n        regularConfirmation: {\r\n            initial: \"prompt\",\r\n            on: {\r\n                RECOGNISED: [{\r\n                    cond: (context) => \"agree\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { agree: grammar[context.recResult].agree } }),\r\n                    target: \"confirmation\"\r\n                },\r\n                {   \r\n                    cond: (context) => \"refuse\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { refuse: grammar[context.recResult].refuse } }),\r\n                    target: \"who\"\r\n                },\r\n                { target: \".nomatch\" }],\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: send((context) => ({\r\n                        type: \"SPEAK\",\r\n                        value: `Do you want me to create an appointment with ${context.person} on ${context.day} at ${context.time} ?`\r\n                    })),\r\n                    on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                },\r\n                nomatch: {\r\n                    entry: say(\"Sorry can you answer with yes or no?\"),\r\n                    on: { ENDSPEECH: \"prompt\" }\r\n                },\r\n            }\r\n        },\r\n        confirmationWholeDay: {\r\n            initial: \"prompt\",\r\n            on: {\r\n                RECOGNISED: [{\r\n                    cond: (context) => \"agree\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { agree: grammar[context.recResult].agree } }),\r\n                    target: \"confirmation\"\r\n                },\r\n                {   \r\n                    cond: (context) => \"refuse\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { refuse: grammar[context.recResult].refuse } }),\r\n                    target: \"who\"\r\n                },\r\n                { target: \".nomatch\" }],\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: send((context) => ({\r\n                        type: \"SPEAK\",\r\n                        value: `Do you want me to create an appointment with ${context.person} on ${context.day} for the whole day?`\r\n                    })),\r\n                    on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                },\r\n                nomatch: {\r\n                    entry: say(\"Sorry can you answer with yes or no?\"),\r\n                    on: { ENDSPEECH: \"prompt\" }\r\n                },\r\n            }\r\n        },\r\n        confirmation: {\r\n            initial: \"prompt\",\r\n            on: { ENDSPEECH: \"init\" },\r\n            states: {\r\n                prompt: { entry: say(\"Your appointment has been created!\") }\r\n            }\r\n        }\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}