{"ast":null,"code":"//\n//  runparser.js\n//\n\n/*\n  The author or authors of this code dedicate any and all \n  copyright interest in this code to the public domain.\n*/\n// helper functions for the parser demo\nimport * as SRGS from './srgs';\n\nfunction getElement(id) {\n  return document.getElementById(id);\n}\n\nfunction appendElement(parent, element, text) {\n  var elem = document.createElement(element);\n  if (text) elem.appendChild(document.createTextNode(text));\n  parent.appendChild(elem);\n  return elem;\n}\n\nfunction runParser(input) {\n  var resultsDiv = getElement(\"results\");\n  resultsDiv.innerHTML = \"\";\n  var maybeFilter;\n\n  if (getElement(\"usefilter\") && getElement(\"usefilter\").checked) {\n    maybeFilter = filter;\n    appendElement(resultsDiv, \"EM\", \"Using left-corner filter\");\n  }\n\n  var startTime = new Date();\n  var parseChart = parse(input, grammar, grammar.$root, maybeFilter);\n  var parseTime = new Date() - startTime;\n  var parseResults = parseChart.resultsForRule(grammar.$root);\n  console.log(parseResults[0]);\n\n  if (parseResults) {\n    for (var i in parseResults) {\n      resultsDiv.innerHTML += display(parseResults[i], \"\");\n    }\n  } else {\n    appendElement(resultsDiv, \"P\", \"No results found!\");\n  }\n  /*\n    if (parseResults) { \n      var resultList = appendElement(resultsDiv, \"OL\");\n      for (var i in parseResults) \n        appendElement(resultList, \"LI\", JSON.stringify(parseResults[i]));\n    } else {\n      appendElement(resultsDiv, \"P\", \"No results found!\");\n    }\n  */\n\n\n  var statistics = parseChart.statistics();\n  appendElement(resultsDiv, \"P\", \"Chart size: \" + statistics.nrEdges + \" edges\" + \" (\" + statistics.nrPassiveEdges + \" passive)\");\n  appendElement(resultsDiv, \"P\", \"Parse time: \" + parseTime + \" ms\" + \" (\" + (parseTime / statistics.nrEdges).toFixed(2) + \" ms/edge)\");\n}\n\nfunction runWordParser() {\n  runParser(getElement(\"input\").value.split(/\\s+/));\n}\n\nfunction runCharacterParser() {\n  runParser(getElement(\"input\").value.split(\"\"));\n}\n\nexport function loadGrammar(str) {\n  var dom = parseXML(str);\n  var root = dom.getElementsByTagName(\"grammar\")[0].getAttribute(\"root\");\n  var grammar = new SRGS.Grammar(root);\n  var xrules = dom.getElementsByTagName(\"rule\");\n\n  for (var r = 0; r < xrules.length; r++) {\n    var xrule = xrules[r];\n    var id = xrule.getAttribute(\"id\");\n    grammar[id] = processRuleExpansions(xrule);\n  }\n\n  return grammar;\n}\n\nfunction processRuleExpansions(xrule) {\n  var xitems = xrule.childNodes;\n  var rule = [];\n\n  for (var i = 0; i < xitems.length; i++) {\n    if (xitems[i].nodeType == 3) {\n      var str = xitems[i].textContent.trim();\n\n      if (str != \"\") {\n        rule.push(str.split(/ +/));\n      }\n    } else if (xitems[i].nodeType == 1) {\n      if (xitems[i].nodeName == \"token\") {\n        rule.push(SRGS.Tag(xitems[i].textContent));\n      } else if (xitems[i].nodeName == \"ruleref\") {\n        var uri = xitems[i].getAttribute(\"uri\");\n        rule.push(SRGS.Ref(uri.slice(1)));\n      } else if (xitems[i].nodeName == \"tag\") {\n        rule.push(SRGS.Tag(xitems[i].textContent.trim()));\n      } else if (xitems[i].nodeName == \"one-of\") {\n        rule.push(SRGS.OneOf(processRuleExpansions(xitems[i])));\n      } else if (xitems[i].nodeName == \"item\") {\n        var repeat = xitems[i].getAttribute(\"repeat\");\n\n        if (!repeat) {\n          rule.push(processRuleExpansions(xitems[i]));\n        } else {\n          var r = repeat.split(\"-\");\n          var min = parseInt(r[0]);\n          var max = parseInt(r[1]);\n          max = max ? max : Infinity;\n          rule.push(SRGS.Repeat(min, max, processRuleExpansions(xitems[i])));\n        }\n      } else {\n        console.log(xitems[i]);\n      }\n    }\n  }\n\n  return rule;\n}\n\nfunction parseXML(text) {\n  if (typeof DOMParser != \"undefined\") {\n    // Mozilla, Firefox, and related browsers\n    return new DOMParser().parseFromString(text, \"application/xml\");\n  } else if (typeof ActiveXObject != \"undefined\") {\n    // Internet Explorer.\n    var doc = XML.newDocument(); // Create an empty document\n\n    doc.loadXML(text); // Parse text into it\n\n    return doc; // Return it\n  } else {\n    // As a last resort, try loading the document from a data: URL\n    // This is supposed to work in Safari. Thanks to Manos Batsis and\n    // his Sarissa library (sarissa.sourceforge.net) for this technique.\n    var url = \"data:text/xml;charset=utf-8,\" + encodeURIComponent(text);\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url, false);\n    request.send(null);\n    return request.responseXML;\n  }\n}\n\n;","map":{"version":3,"sources":["C:/Users/Bérénice/Documents/nodeJS/react-xstate-colourchanger/src/runparser.js"],"names":["SRGS","getElement","id","document","getElementById","appendElement","parent","element","text","elem","createElement","appendChild","createTextNode","runParser","input","resultsDiv","innerHTML","maybeFilter","checked","filter","startTime","Date","parseChart","parse","grammar","$root","parseTime","parseResults","resultsForRule","console","log","i","display","statistics","nrEdges","nrPassiveEdges","toFixed","runWordParser","value","split","runCharacterParser","loadGrammar","str","dom","parseXML","root","getElementsByTagName","getAttribute","Grammar","xrules","r","length","xrule","processRuleExpansions","xitems","childNodes","rule","nodeType","textContent","trim","push","nodeName","Tag","uri","Ref","slice","OneOf","repeat","min","parseInt","max","Infinity","Repeat","DOMParser","parseFromString","ActiveXObject","doc","XML","newDocument","loadXML","url","encodeURIComponent","request","XMLHttpRequest","open","send","responseXML"],"mappings":"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","sourcesContent":["//\n//  runparser.js\n//\n/*\n  The author or authors of this code dedicate any and all \n  copyright interest in this code to the public domain.\n*/\n\n\n// helper functions for the parser demo\n\nimport * as SRGS from './srgs'\n\nfunction getElement(id) {\n  return document.getElementById(id);\n}\n\nfunction appendElement(parent, element, text) {\n  var elem = document.createElement(element);\n  if (text)\n    elem.appendChild(document.createTextNode(text));\n  parent.appendChild(elem);\n  return elem\n}\n\nfunction runParser(input) {\n  var resultsDiv = getElement(\"results\");\n  resultsDiv.innerHTML = \"\";\n  var maybeFilter;\n  if (getElement(\"usefilter\") && getElement(\"usefilter\").checked) {\n    maybeFilter = filter;\n    appendElement(resultsDiv, \"EM\", \"Using left-corner filter\");\n  }\n  var startTime = new Date();\n  var parseChart = parse(input, grammar, grammar.$root, maybeFilter);\n  var parseTime = new Date() - startTime;\n  var parseResults = parseChart.resultsForRule(grammar.$root);\n  \n  console.log(parseResults[0]);\n  \n  if (parseResults) {\n    for (var i in parseResults) {\n        resultsDiv.innerHTML += display(parseResults[i],\"\");\n    }\n  } else {\n    appendElement(resultsDiv, \"P\", \"No results found!\");\n  }\n  \n/*\n  if (parseResults) { \n    var resultList = appendElement(resultsDiv, \"OL\");\n    for (var i in parseResults) \n      appendElement(resultList, \"LI\", JSON.stringify(parseResults[i]));\n  } else {\n    appendElement(resultsDiv, \"P\", \"No results found!\");\n  }\n*/\n  var statistics = parseChart.statistics()\n  appendElement(resultsDiv, \"P\", \"Chart size: \" + statistics.nrEdges + \" edges\" +\n\t\t\" (\" + statistics.nrPassiveEdges + \" passive)\");\n  appendElement(resultsDiv, \"P\", \"Parse time: \" + parseTime + \" ms\" + \n\t\t\" (\" + (parseTime / statistics.nrEdges).toFixed(2) + \" ms/edge)\");\n}\n\nfunction runWordParser() {\n  runParser(getElement(\"input\").value.split(/\\s+/));\n}\n\nfunction runCharacterParser() {\n  runParser(getElement(\"input\").value.split(\"\"));\n}\n\nexport function loadGrammar(str) {\n    var dom = parseXML(str);\n    var root = dom.getElementsByTagName(\"grammar\")[0].getAttribute(\"root\");\n    var grammar = new SRGS.Grammar(root);\n    var xrules = dom.getElementsByTagName(\"rule\");\n    for(var r=0; r < xrules.length; r++) {\n        var xrule = xrules[r];\n        var id = xrule.getAttribute(\"id\");\n        grammar[id] = processRuleExpansions(xrule);\n    }\n    return grammar;\n}\n\nfunction processRuleExpansions(xrule) {\n    var xitems = xrule.childNodes;\n    var rule = [];\n    for(var i=0; i < xitems.length; i++) {\n        if (xitems[i].nodeType == 3) {\n            var str = xitems[i].textContent.trim();\n            if (str != \"\") {\n                rule.push(str.split(/ +/));\n            }\n        } else if (xitems[i].nodeType == 1) {\n            if (xitems[i].nodeName == \"token\") {\n                rule.push(SRGS.Tag(xitems[i].textContent));\n            } else if (xitems[i].nodeName == \"ruleref\") {\n                var uri = xitems[i].getAttribute(\"uri\");\n                rule.push(SRGS.Ref(uri.slice(1)));\n            } else if (xitems[i].nodeName == \"tag\") {\n                rule.push(SRGS.Tag(xitems[i].textContent.trim()));\n            } else if (xitems[i].nodeName == \"one-of\") {\n                rule.push(SRGS.OneOf(processRuleExpansions(xitems[i])));\n            } else if (xitems[i].nodeName == \"item\") {\n                var repeat = xitems[i].getAttribute(\"repeat\");\n                if (!repeat) {\n                    rule.push(processRuleExpansions(xitems[i]));\n                } else {\n                    var r = repeat.split(\"-\");\n                    var min = parseInt(r[0]);\n                    var max = parseInt(r[1]);\n                    max = (max) ? max : Infinity;\n                    rule.push(SRGS.Repeat(min, max, processRuleExpansions(xitems[i])));\n                }\n            } else {\n                console.log(xitems[i]);\n            }\n        }\n    }\n\treturn rule;\n}\n\nfunction parseXML(text) {\n    if (typeof DOMParser != \"undefined\") {\n        // Mozilla, Firefox, and related browsers\n        return (new DOMParser()).parseFromString(text, \"application/xml\");\n    }\n    else if (typeof ActiveXObject != \"undefined\") {\n        // Internet Explorer.\n        var doc = XML.newDocument();  // Create an empty document\n        doc.loadXML(text);            // Parse text into it\n        return doc;                   // Return it\n    }\n    else {\n        // As a last resort, try loading the document from a data: URL\n        // This is supposed to work in Safari. Thanks to Manos Batsis and\n        // his Sarissa library (sarissa.sourceforge.net) for this technique.\n        var url = \"data:text/xml;charset=utf-8,\" + encodeURIComponent(text);\n        var request = new XMLHttpRequest();\n        request.open(\"GET\", url, false);\n        request.send(null);\n        return request.responseXML;\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}