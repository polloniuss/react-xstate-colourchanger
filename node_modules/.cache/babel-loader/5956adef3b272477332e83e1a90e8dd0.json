{"ast":null,"code":"//\n//  quotesgrammar.js\n//\n\n/*\r\nto do is to be\tSocrates\r\nto be is to do\tSartre\r\ndo be do be do\tSinatra\r\n*/\ngrammar = new Grammar('funnyquotes');\ngrammar.funnyquotes = [Ref(\"quote\"), Tag(\"out.type=rules.quote;\")];\ngrammar.quote = [OneOf([[[\"to\", \"do\", \"is\", \"to\", \"be\"], Tag(\"out='Socrates'\")], [[\"to\", \"be\", \"is\", \"to\", \"do\"], Tag(\"out='Sartre'\")], [[\"do\", \"be\", \"do\", \"be\", \"do\"], Tag(\"out='coke'\")]])];","map":{"version":3,"sources":["C:/Users/Bérénice/Documents/nodeJS/react-xstate-colourchanger/src/grammars/quotesgrammar.js"],"names":["grammar","Grammar","funnyquotes","Ref","Tag","quote","OneOf"],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACAA,OAAO,GAAG,IAAIC,OAAJ,CAAY,aAAZ,CAAV;AAEAD,OAAO,CAACE,WAAR,GAAsB,CAACC,GAAG,CAAC,OAAD,CAAJ,EAAeC,GAAG,CAAC,uBAAD,CAAlB,CAAtB;AACAJ,OAAO,CAACK,KAAR,GAAgB,CAACC,KAAK,CAAC,CACT,CAAC,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,CAAD,EAA6BF,GAAG,CAAC,gBAAD,CAAhC,CADS,EAElB,CAAC,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,CAAD,EAA6BA,GAAG,CAAC,cAAD,CAAhC,CAFkB,EAGlB,CAAC,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,CAAD,EAA6BA,GAAG,CAAC,YAAD,CAAhC,CAHkB,CAAD,CAAN,CAAhB","sourcesContent":["//\r\n//  quotesgrammar.js\r\n//\r\n/*\r\nto do is to be\tSocrates\r\nto be is to do\tSartre\r\ndo be do be do\tSinatra\r\n*/\r\ngrammar = new Grammar('funnyquotes');\r\n\r\ngrammar.funnyquotes = [Ref(\"quote\"), Tag(\"out.type=rules.quote;\")];\r\ngrammar.quote = [OneOf([\r\n              [[\"to\",\"do\",\"is\",\"to\",\"be\"], Tag(\"out='Socrates'\")],\r\n\t\t\t  [[\"to\",\"be\",\"is\",\"to\",\"do\"], Tag(\"out='Sartre'\")],\r\n\t\t\t  [[\"do\",\"be\",\"do\",\"be\",\"do\"], Tag(\"out='coke'\")]])];"]},"metadata":{},"sourceType":"module"}