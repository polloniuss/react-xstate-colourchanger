{"ast":null,"code":"import { __assign } from './_virtual/_tslib.js';\nimport { createMachine, State } from 'xstate';\nimport safeStringify from 'fast-safe-stringify';\n\nfunction getLazy(value) {\n  return typeof value === 'function' ? value() : value;\n}\n\nfunction stringify(value) {\n  try {\n    return JSON.stringify(value);\n  } catch (e) {\n    return safeStringify(value);\n  }\n}\n\nfunction isReceiverEvent(event) {\n  if (!event) {\n    return false;\n  }\n\n  try {\n    if (typeof event === 'object' && 'type' in event && event.type.startsWith('service.')) {\n      return true;\n    }\n  } catch (e) {\n    return false;\n  }\n\n  return false;\n}\n\nfunction parseState(stateJSON) {\n  var state = State.create(JSON.parse(stateJSON));\n  delete state.history;\n  return state;\n}\n\nfunction parseReceiverEvent(event) {\n  switch (event.type) {\n    case 'service.event':\n      return __assign(__assign({}, event), {\n        event: JSON.parse(event.event)\n      });\n\n    case 'service.register':\n      return __assign(__assign({}, event), {\n        machine: createMachine(JSON.parse(event.machine)),\n        state: parseState(event.state)\n      });\n\n    case 'service.state':\n      return __assign(__assign({}, event), {\n        state: parseState(event.state)\n      });\n\n    default:\n      return event;\n  }\n}\n\nexport { getLazy, isReceiverEvent, parseReceiverEvent, parseState, stringify };","map":{"version":3,"sources":["C:/Users/Bérénice/Documents/nodeJS/own_project/react-xstate-colourchanger/node_modules/@xstate/inspect/es/utils.js"],"names":["__assign","createMachine","State","safeStringify","getLazy","value","stringify","JSON","e","isReceiverEvent","event","type","startsWith","parseState","stateJSON","state","create","parse","history","parseReceiverEvent","machine"],"mappings":"AAAA,SAASA,QAAT,QAAyB,sBAAzB;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,QAArC;AACA,OAAOC,aAAP,MAA0B,qBAA1B;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,SAAO,OAAOA,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,EAAnC,GAAwCA,KAA/C;AACH;;AACD,SAASC,SAAT,CAAmBD,KAAnB,EAA0B;AACtB,MAAI;AACA,WAAOE,IAAI,CAACD,SAAL,CAAeD,KAAf,CAAP;AACH,GAFD,CAGA,OAAOG,CAAP,EAAU;AACN,WAAOL,aAAa,CAACE,KAAD,CAApB;AACH;AACJ;;AACD,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,MAAI,CAACA,KAAL,EAAY;AACR,WAAO,KAAP;AACH;;AACD,MAAI;AACA,QAAI,OAAOA,KAAP,KAAiB,QAAjB,IACA,UAAUA,KADV,IAEAA,KAAK,CAACC,IAAN,CAAWC,UAAX,CAAsB,UAAtB,CAFJ,EAEuC;AACnC,aAAO,IAAP;AACH;AACJ,GAND,CAOA,OAAOJ,CAAP,EAAU;AACN,WAAO,KAAP;AACH;;AACD,SAAO,KAAP;AACH;;AACD,SAASK,UAAT,CAAoBC,SAApB,EAA+B;AAC3B,MAAIC,KAAK,GAAGb,KAAK,CAACc,MAAN,CAAaT,IAAI,CAACU,KAAL,CAAWH,SAAX,CAAb,CAAZ;AACA,SAAOC,KAAK,CAACG,OAAb;AACA,SAAOH,KAAP;AACH;;AACD,SAASI,kBAAT,CAA4BT,KAA5B,EAAmC;AAC/B,UAAQA,KAAK,CAACC,IAAd;AACI,SAAK,eAAL;AACI,aAAOX,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKU,KAAL,CAAT,EAAsB;AAAEA,QAAAA,KAAK,EAAEH,IAAI,CAACU,KAAL,CAAWP,KAAK,CAACA,KAAjB;AAAT,OAAtB,CAAf;;AACJ,SAAK,kBAAL;AACI,aAAOV,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKU,KAAL,CAAT,EAAsB;AAAEU,QAAAA,OAAO,EAAEnB,aAAa,CAACM,IAAI,CAACU,KAAL,CAAWP,KAAK,CAACU,OAAjB,CAAD,CAAxB;AAAqDL,QAAAA,KAAK,EAAEF,UAAU,CAACH,KAAK,CAACK,KAAP;AAAtE,OAAtB,CAAf;;AACJ,SAAK,eAAL;AACI,aAAOf,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKU,KAAL,CAAT,EAAsB;AAAEK,QAAAA,KAAK,EAAEF,UAAU,CAACH,KAAK,CAACK,KAAP;AAAnB,OAAtB,CAAf;;AACJ;AACI,aAAOL,KAAP;AARR;AAUH;;AAED,SAASN,OAAT,EAAkBK,eAAlB,EAAmCU,kBAAnC,EAAuDN,UAAvD,EAAmEP,SAAnE","sourcesContent":["import { __assign } from './_virtual/_tslib.js';\r\nimport { createMachine, State } from 'xstate';\r\nimport safeStringify from 'fast-safe-stringify';\r\n\r\nfunction getLazy(value) {\r\n    return typeof value === 'function' ? value() : value;\r\n}\r\nfunction stringify(value) {\r\n    try {\r\n        return JSON.stringify(value);\r\n    }\r\n    catch (e) {\r\n        return safeStringify(value);\r\n    }\r\n}\r\nfunction isReceiverEvent(event) {\r\n    if (!event) {\r\n        return false;\r\n    }\r\n    try {\r\n        if (typeof event === 'object' &&\r\n            'type' in event &&\r\n            event.type.startsWith('service.')) {\r\n            return true;\r\n        }\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    return false;\r\n}\r\nfunction parseState(stateJSON) {\r\n    var state = State.create(JSON.parse(stateJSON));\r\n    delete state.history;\r\n    return state;\r\n}\r\nfunction parseReceiverEvent(event) {\r\n    switch (event.type) {\r\n        case 'service.event':\r\n            return __assign(__assign({}, event), { event: JSON.parse(event.event) });\r\n        case 'service.register':\r\n            return __assign(__assign({}, event), { machine: createMachine(JSON.parse(event.machine)), state: parseState(event.state) });\r\n        case 'service.state':\r\n            return __assign(__assign({}, event), { state: parseState(event.state) });\r\n        default:\r\n            return event;\r\n    }\r\n}\r\n\r\nexport { getLazy, isReceiverEvent, parseReceiverEvent, parseState, stringify };\r\n"]},"metadata":{},"sourceType":"module"}