"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useService = exports.fromService = void 0;
var react_1 = require("react");
var useActor_1 = require("./useActor");
function fromService(service) {
    if (process.env.NODE_ENV !== 'production' && !('machine' in service)) {
        throw new Error("Attempted to use an actor-like object instead of a service in the useService() hook. Please use the useActor() hook instead.");
    }
    var machine = service.machine;
    return {
        send: service.send.bind(service),
        subscribe: service.subscribe.bind(service),
        stop: service.stop,
        current: service.initialized ? service.state : machine.initialState,
        name: service.sessionId
    };
}
exports.fromService = fromService;
function useService(service) {
    var serviceActor = react_1.useMemo(function () { return fromService(service); }, [service]);
    return useActor_1.useActor(serviceActor, function (actor) { return actor.current; });
}
exports.useService = useService;
